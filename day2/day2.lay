import std.io.fs:{File};
import std.math:{rem};

let scoreMap1 = {
  'A': {
    'X': 4,
    'Y': 8,
    'Z': 3,
  },
  'B': {
    'X': 1,
    'Y': 5,
    'Z': 9,
  },
  'C': {
    'X': 7,
    'Y': 2,
    'Z': 6,
  }
};

let scoreMap2 = {
  'A': {
    'X': 3,
    'Y': 4,
    'Z': 8,
  },
  'B': {
    'X': 1,
    'Y': 5,
    'Z': 9,
  },
  'C': {
    'X': 2,
    'Y': 6,
    'Z': 7,
  }
};

class Commands {
  init(first, second) {
    @first = first;
    @second = second;
  }

  score1() {
    scoreMap1[@first][@second]
  }

  score2() {
    scoreMap2[@first][@second]
  }

  str() {
    '${@first} ${@second}'
  }
}

let data = File.readAllText('input.txt')
  .split('\n')
  .map(|x| {
    let commands = x.split(' ').into(List.collect);

    Commands(commands[0], commands[1])
  })
  .into(List.collect);

print(data.iter().map(|x| x.score1()).reduce(0, |a, b| a + b));
print(data.iter().map(|x| x.score2()).reduce(0, |a, b| a + b));
